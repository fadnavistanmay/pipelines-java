# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  GRADEL_USER_HOME : $(Pipeline.Workspace)/.gradle

steps:
- task: CacheBeta@1
  inputs:
    key: gradle | $(Agent.OS)
    path: $(GRADLE_USER_HOME)
  displayName: Gradle build cache

- script: |
    ./gradlew --build-cache build
    # stop the Gradle deamon to ensure no files are left open, imacting the save cache task.
    ./gradlew --stop
  displayName: build

#- task: Gradle@2
#  inputs:
#   workingDirectory: ''
#    gradleWrapperFile: 'gradlew'
#    gradleOptions: '-Xmx3072m'
#    javaHomeOption: 'JDKVersion'
#    jdkVersionOption: '1.8'
#    jdkArchitectureOption: 'x64'
#    publishJUnitResults: true
#    testResultsFiles: '**/TEST-*.xml'
#    tasks: 'build'
