# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

#trigger:
#- master

#pool:
#  vmImage: 'ubuntu-latest'

stages:
- stage: firstrun
  displayName: 'Empty cache'
  jobs:
  - template: azure-pipelines-jobs.yml

- stage: secondrun
  dependsOn: firstrun
  displayName: 'Cached'
  jobs:
  - template: azure-pipelines-jobs.yml

variables:
  MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
  MAVEN_OPTS: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'
  CACHE_KEY: maven2 | $(Build.BuildId) | **/pom.xml
  CACHE_RESTOREKEY: maven2 | $(Build.BuildId)

#steps:
#
#- task: CacheBeta@1
#  inputs:
#    key: maven2 | **/pom.xml
#    path: $(MAVEN_CACHE_FOLDER)
#    cacheHitVar: CACHE_RESTORED
#  displayName: Cache Mevn local repo
#
#- script: mvn install -B -e
#  displayName: Install
#  condition: ne(variables.CACHE_RESTORED, 'true')
#
#- script: mvn package
#  displayName: Build


#- task: Maven@3
#  inputs:
#    mavenPomFile: 'pom.xml'
#    mavenOptions: '-Xmx3072m'
#    javaHomeOption: 'JDKVersion'
#    jdkVersionOption: '1.8'
#    jdkArchitectureOption: 'x64'
#    publishJUnitResults: true
#    testResultsFiles: '**/surefire-reports/TEST-*.xml'
#    goals: 'package'
