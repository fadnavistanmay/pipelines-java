# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
  MAVEN_OPTS: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'

steps:

- task: CacheBeta@1
  inputs:
    key: maven2 | **/pom.xml
    path: $(MAVEN_CACHE_FOLDER)
    cacheHitVar: CACHE_RESTORED
  displayName: Cache Mevn local repo

- script: mvn install -B -e
  displayName: Install
  condition: ne(variables.CACHE_RESTORED, 'true')

- script: mvn package
  displayName: Build


#- task: Maven@3
#  inputs:
#    mavenPomFile: 'pom.xml'
#    mavenOptions: '-Xmx3072m'
#    javaHomeOption: 'JDKVersion'
#    jdkVersionOption: '1.8'
#    jdkArchitectureOption: 'x64'
#    publishJUnitResults: true
#    testResultsFiles: '**/surefire-reports/TEST-*.xml'
#    goals: 'package'
